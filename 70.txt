You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top? 

// a Fibonacci problem, n1 means take 1 step and n2 means take 2 step
// F(n) = F(n - 1) + F(n - 2)
class Solution {
public:
    int climbStairs(int n) {
        if(n <= 0) return 0;
        if(n == 1) return 1;
        if(n == 2) return 2;
        int n1 = 1, n2 = 2, count = 0;
        for(int i = 2; i < n; i++)
        {
            count = n1 + n2;
            n1 = n2;
            n2 = count;
        }
        return count;
    }
};