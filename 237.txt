//Write a function to delete a node (except the tail) in a singly linked list, given only access to that node.
//Supposed the linked list is 1 -> 2 -> 3 -> 4 and you are given the third node with value 3, the linked list should become 1 -> 2 -> 4 after calling your function. 

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
 
 // can't get the head node, so implemented by deleting the next node
class Solution {
public:
    void deleteNode(ListNode* node) {
        //node->val = node->next->val;
        //node->next = node->next->next;
		auto d_node = node->next;
        *node = *node->next;
		delete d_node;
    }
};